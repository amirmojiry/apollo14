version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_MAPS_API_KEY=${REACT_APP_MAPS_API_KEY}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - APP_NAME=Apollo14
      - APP_ENV=local
      - APP_KEY=base64:your-app-key-here
      - APP_DEBUG=true
      - APP_URL=http://localhost:8000
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=apollo14_air_quality
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - NASA_TEMPO_API_KEY=${NASA_TEMPO_API_KEY}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - OPENAQ_API_KEY=${OPENAQ_API_KEY}
      - PYTHON_SERVICE_URL=http://python-service:5000
    volumes:
      - ./backend:/var/www/html
      - backend_storage:/var/www/html/storage
    depends_on:
      - postgres
      - redis
      - python-service

  python-service:
    build: 
      context: ./python-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NASA_TEMPO_API_KEY=${NASA_TEMPO_API_KEY}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - OPENAQ_API_KEY=${OPENAQ_API_KEY}
    volumes:
      - ./python-service:/app
    depends_on:
      - redis

  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=apollo14_air_quality
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  redis_data:
  backend_storage:
